
@using Domain
@using Syncfusion.Blazor.Popups


<h6>@Localizer.Str["Label_Filter"]</h6>
<hr class="mb-2"/>

@if(_loadingStatus == 1)
{
    <EditForm Model="@_localModel" OnValidSubmit="ValidSubmit">

        <div class="container-fluid mt-3 itemDetail e-small">

            <div class="row">
                <div class="col-lg-3 pr-4">   
                    <div class="row mb-2">
                        <label class="col-lg-3 text-lg-end">@Localizer.Str["Label_Filter_Case_Created"]</label>
                        <div class="col-lg-9 d-lg-flex">
                            <SfDateRangePicker ShowClearButton="true" Locale="@Culture" TValue="DateTime?" @bind-StartDate="_localModel.CreateFromDate" @bind-EndDate="_localModel.CreateToDate" ></SfDateRangePicker>
                        </div>
                    </div>
                    
                    <div class="row mb-2">
                        <label class="col-lg-3 text-lg-end">@Localizer.Str["Label_Filter_Case_Modify"]</label>
                        <div class="col-lg-9 d-lg-flex">
                            <SfDateRangePicker ShowClearButton="true" Locale="@Culture" TValue="DateTime?" @bind-StartDate="_localModel.ModifyFromDate" @bind-EndDate="_localModel.ModifyToDate" ></SfDateRangePicker>                       
                        </div>
                    </div>                                        
                </div>

                <div class="col-lg-3">
                    <div class="row mb-2">
                        <label class="col-lg-4 text-lg-end">@Localizer.Str["Label_Filter_ProfileID"]</label>
                        <div class="col-lg-8">
                            <SfComboBox TValue="int?" TItem="FiltersModels.ProfileModel" @bind-Value='_localModel.ProfilId'  Placeholder="@Localizer.Str["Value_All_Text"]" DataSource="@ProfileList">
                                <ComboBoxFieldSettings Text="ProfileName" Value="ProfileID"></ComboBoxFieldSettings>
                            </SfComboBox>
                        </div>
                    </div>
                    @if (_localModel.ShowResult)
                    {
                        <div class="row mb-2">
                            <label class="col-lg-4 text-lg-end">@Localizer.Str["Label_Filter_Case_Result"]</label>
                            <div class="col-lg-8">
                                <SfComboBox TValue="int?" TItem="FiltersModels.CaseResultModel"  @bind-Value='_localModel.ResultId' 
                                    Placeholder="@Localizer.Str["Value_All_Text"]" Enabled="!_localModel.ShowOnlyOpenCases" DataSource="@ResultList">
                                    <ComboBoxFieldSettings Text="CaseResult" Value="CaseResultID"></ComboBoxFieldSettings>
                                </SfComboBox>
                            </div>
                        </div>  
                    }
                    @if (_localModel.ShowStatus)
                    {
                        <div class="row mb-2">
                            <label class="col-lg-4 text-lg-end">@Localizer.Str["Label_Filter_Case_Status"]</label>
                            <div class="col-lg-8">
                                <SfComboBox TValue="int?" TItem="FiltersModels.CaseStatusModel"  @bind-Value='_localModel.StatusId' Placeholder="@Localizer.Str["Value_All_Text"]" DataSource="@StatusList">
                                    <ComboBoxFieldSettings Text="CaseStatus" Value="CaseStatusID"></ComboBoxFieldSettings>
                                </SfComboBox>
                            </div>
                        </div>
                    }
                </div>

                <div class="col-lg-3">
                    <div class="row mb-2">
                        <label class="col-lg-4 text-lg-end">@Localizer.Str["Label_Filter_Case_CaseID"]</label>
                        <div class="col-lg-8">
                            <SfNumericTextBox ShowSpinButton="false" ShowClearButton="true" Format="########"   Placeholder="@Localizer.Str["Label_Filter_Case_CaseID"]" @bind-Value="_localModel.CaseId"></SfNumericTextBox>
                        </div>
                    </div>

                    <div class="row mb-2">
                        <label class="col-lg-4 text-lg-end">@Localizer.Str["Label_Filter_CustomerName"]</label>
                        <div class="col-lg-8">
                            <SfTextBox Placeholder="@Localizer.Str["Label_Filter_CustomerName"]" ShowClearButton="true" @bind-Value="_localModel.SearchedName" ></SfTextBox>
                        </div>
                    </div>

                    @if (_localModel.ShowOwnCasesCheckBox)
                    {
                        <div class="row mb-2">
                            <label class="col-lg-4 text-lg-end">@Localizer.Str["Label_Filter_Report_OnlyOwn"]</label>
                            <div class="col-lg-8">
                                <SfCheckBox @bind-Checked="_localModel.ShowOnlyOwnCases" TChecked="bool" @onchange="InitProfileList"></SfCheckBox>
                            </div>
                        </div> 
                    }                    
                </div>

                <div class="col-lg-3">
                    <div class="row mb-2">
                       
                        <label class="col-lg-4 text-lg-end">
                             <SfTooltip Target="#tranid" Content="@Localizer.Str["Label_Filter_Case_TranID_Info"]" Position="Position.RightBottom" IsSticky="true" OpensOn="Click">
                                <div>
                                    @Localizer.Str["Label_Filter_Case_TranID"]
                                    <a id="tranid" href=""  @onclick:preventDefault><sup><i class="fa-regular fa-circle-question"></i></sup></a>
                                </div>
                            </SfTooltip>
                        </label>
                        <div class="col-lg-8">
                            <SfNumericTextBox ShowSpinButton="false" ShowClearButton="true" Format="########"   Placeholder="@Localizer.Str["Label_Filter_Case_TranID"]" @bind-Value="_localModel.MatchTranId"></SfNumericTextBox>
                        </div>
                    </div>

                    <div class="row mb-2">
                         <label class="col-lg-4 text-lg-end">
                             <SfTooltip Target="#tranid" Content="@Localizer.Str["Label_Filter_Case_SourceID_Info"]" Position="Position.RightBottom" IsSticky="true" OpensOn="Click">
                                <div>
                                    @Localizer.Str["Label_Filter_Case_SourceID"]
                                    <a id="tranid" href=""  @onclick:preventDefault><sup><i class="fa-regular fa-circle-question"></i></sup></a>
                                </div>
                            </SfTooltip>
                        </label>                        
                        <div class="col-lg-8">
                            <SfTextBox Placeholder="@Localizer.Str["Label_Filter_Case_SourceID"]" ShowClearButton="true" @bind-Value="_localModel.AddrSourceId" ></SfTextBox>
                        </div>
                    </div>                    
                </div>
            </div>

        </div>

        <hr class="mt-2" />

        <div class="row py-3">
            <div class="col-lg">
                <!--
                <SfButton Type="submit" CssClass="e-flat" IsPrimary="true" IconCss="e-icons-hcm e-hcm-search" Content="@Localizer.Str["Button_Filter"]" ></SfButton>
                <SfButton Type="button" CssClass="e-flat" IsPrimary="true" Content="@Localizer.Str["Button_Filter_Reset"]"  @onclick="ClearFilter"></SfButton>
                -->
                <SfButton type="submit" IsPrimary="true">@Localizer.Str["Button_Filter"]</SfButton>
                <SfButton type="button" IsPrimary="false" @onclick="ClearFilter">@Localizer.Str["Button_Filter_Reset"]</SfButton>
            </div>
        </div>

    </EditForm>
}



<UiMessageBox Data="Messages.List" />

<style>
    .e-control {
        font-family:inherit;
        font-size:inherit;
    }
</style>

@code {
    [Inject] private IFiltersData FiltersDataService { get; set; }
    [Inject] private ILogger<CaseFilter> _logger { get; set; }
    [Inject] private CommonLocalizationService Localizer { get; set; }

    [CascadingParameter(Name = "CurrentContactId")] protected int CurrentContactId { get; set; }
    [Parameter] public CaseFilterModel InputModel { get; set; }
    [Parameter] public string Culture  { get; set; }
    [Parameter] public EventCallback<CaseFilterModel> OnValidSubmit { get; set; }

    private CaseFilterModel _localModel { get; set; }

    protected UiMessages Messages { get; set; }

    protected List<FiltersModels.GateModel> GateList;
    protected List<FiltersModels.ProfileModel> ProfileList;
    protected List<FiltersModels.CategoryModel> CategoryList;
    protected List<FiltersModels.CaseResultModel> ResultList;
    protected List<FiltersModels.CaseStatusModel> StatusList;

    private int _loadingStatus;
    private bool _comboLoaded;


    protected override void OnInitialized()
    {     
        Messages = new UiMessages();
        _comboLoaded = false;
        InitializeFilterValues();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        try
        {
            if (!_comboLoaded)
            {
                _loadingStatus = 0;
                InitializeFilterComboBoxes();
                _loadingStatus = 1;
            }

        }
        catch (Exception ex)
        {                        
            _logger.LogError(ex.Message);
            _logger.LogDebug(ex, ex.Message);
            Messages.AddError(@Localizer.Str["MsgPanel_Error_Title"],ex.Message, showDetail: true);

            _loadingStatus = 2;
        }
    }

    protected void ValidSubmit()
    {
        OnValidSubmit.InvokeAsync(_localModel);
    }

    protected void ClearFilter()
    {
        InitializeFilterValues();        
    }

    protected List<FiltersModels.CaseStatusModel> GetLocalizedStatusLis(int gateId)
    {
        List<FiltersModels.CaseStatusModel> statusList;
        if (_localModel.ShowOnlyOpenCases)
        {
            statusList = FiltersDataService.GetStatuses();
        }
        else
        {
            statusList = FiltersDataService.GetStatuses4Application(gateId);
        }

        foreach (FiltersModels.CaseStatusModel status in statusList)
        {
            status.CaseStatus = Localizer.Str["Case_Status_" + status.CaseStatusID.ToString()];
        }
        return statusList;
    }

    protected List<FiltersModels.CaseResultModel> GetLocalizedResultLis(int gateId)
    {
        var resultList = FiltersDataService.GetResults(gateId);

        foreach (FiltersModels.CaseResultModel result in resultList)
        {
            result.CaseResult = Localizer.Str["Case_Result_" + result.CaseResultID.ToString()];
        }
        return resultList;
    }

    protected void InitializeFilterValues()
    {
        _localModel = ObjHelper.Clone<CaseFilterModel>(InputModel);

    }

    protected void InitializeFilterComboBoxes()
    {
        GateList =  FiltersDataService.GetGates();
        int intdpfGate = 1;

        InitProfileList();
        CategoryList =  FiltersDataService.GetCategories(intdpfGate);
        ResultList =  GetLocalizedResultLis(intdpfGate);
        StatusList =  GetLocalizedStatusLis(intdpfGate);

        _comboLoaded = true;
    }

    protected void InitProfileList()
    {
        int? contactId = _localModel.ShowOnlyOwnCases ? CurrentContactId : null;
        ProfileList =  FiltersDataService.GetProfiles(contactId);
    }
}
