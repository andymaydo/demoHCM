@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.DropDowns



<div class="blue_bg"></div>
<h5>@Localizer.Str["Cases_ListCases_withAlias"]</h5>

<SfGrid DataSource="@CaseList" AllowPaging="true" AllowResizing="false" AllowTextWrap="true"  AllowSorting="true" Locale="@Culture">
    <GridTextWrapSettings WrapMode="WrapMode.Content"></GridTextWrapSettings> 
    <GridPageSettings PageSizes="@pageSizes" PageSize="20"></GridPageSettings>
    @*<GridEvents OnRecordDoubleClick="RecordDoubleClickHandler" TValue="CaseModel"></GridEvents>*@
    <GridColumns>
        <GridColumn Field=@nameof(CaseModel.CaseID) HeaderText="@Localizer.Str["Cases_List_CaseID"]" HeaderTextAlign="Syncfusion.Blazor.Grids.TextAlign.Left" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Left" Width="90">
            <Template>
                @{
                    var _Case = (context as CaseModel);
                    <div>                            
                            <a class="alink" href="/Cases/CaseDetails/@_Case.CaseID"><i class="fa-solid fa-caret-down"></i> @_Case.CaseID</a>
                    </div>
                }
            </Template>
        </GridColumn>
        <GridColumn Field=@nameof(CaseModel.ProfileName) HeaderText="@Localizer.Str["Label_Filter_ProfileID"]" Width="130"></GridColumn>
     
        <GridColumn Field=@nameof(CaseModel.CustomerName) HeaderText="@Localizer.Str["Cases_List_AliasName"]" Width="250"></GridColumn>
        <GridColumn Field=@nameof(CaseModel.CreateDate) HeaderText="@Localizer.Str["Cases_List_CreateOn"]" Width="150"></GridColumn>  
        
        <GridColumn Field=@nameof(CaseModel.ContactName) HeaderText="@Localizer.Str["Cases_List_Contact"]" Width="150"></GridColumn>
        
    </GridColumns>
</SfGrid>


@code {

    [Inject] private CommonLocalizationService Localizer { get; set; }
    [Inject] private ISyncfusionStringLocalizer SfLocalizer { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }
    [Inject] private ProtectedSessionStorage  ProtectedSessionStorage { get; set; }

    [Parameter] public List<CaseModel> CaseList { get; set; }
    [Parameter] public string Culture  { get; set; }     
    [Parameter] public EventCallback<int> OnCaseDetailsClicked { get; set; }


    private string[] pageSizes { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();       
        SetPageSizeDropDown();
    }


    //public async Task RecordDoubleClickHandler(int caseId)
    //{     
    //    await OnCaseDetailsClicked.InvokeAsync(caseId);
    //    await ProtectedSessionStorage.SetAsync("CaseId", caseId);

    //    await JSRuntime.InvokeAsync<object>("open", "/Cases/CaseDetails", "_blank");
    //}

    
    private void SetPageSizeDropDown()
    {
        List<string> pageList = new List<string>();
        pageList.Add(@SfLocalizer.GetText("Pager_All"));
        pageList.Add("10");
        pageList.Add("20");
        pageList.Add("50");
        pageList.Add("100");
        pageSizes = pageList.ToArray();
    }
}
