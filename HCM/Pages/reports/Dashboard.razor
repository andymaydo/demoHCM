@page "/Reports"
@attribute [Authorize]
@using System.Globalization
@using System.Security.Claims
@using Domain



<h3>@Localizer.Str["Reports_Title"]</h3>


<CaseFilter InputModel="@InputFilter" Culture="@CurrentCulture" OnValidSubmit="ShowReport"></CaseFilter>


<DashGrid InputFilter="@SubmitedFilter" ContactId="CurrentContactId" 
            OnStatusClicked="ShowDetailedReportByStatus" 
            OnResultClicked="ShowDetailedReportByResult" 
            OnAliasClicked="ShowDetailedReportByAlias">
</DashGrid>




@code {

    [Inject] private CommonLocalizationService Localizer { get; set; }
    [Inject] private ProtectedSessionStorage ProtectedSessionStore { get; set; }
    //[Inject] private IJSRuntime JSRuntime { get; set; }
    [Inject] private NavigationManager NavManager { get; set; }


    [CascadingParameter(Name = "CurrentContactId")] protected int CurrentContactId { get; set; }
    [CascadingParameter(Name = "CurrentPrincipal")] protected ClaimsPrincipal CurrentPrincipal { get; set; }


    protected CaseFilterModel InputFilter { get; set; }
    protected CaseFilterModel SubmitedFilter { get; set; }
    protected string CurrentCulture { get; set; }

    protected override void OnInitialized()
    {
        InputFilter = new CaseFilterModel(
            showStatus:false, 
            showResult:false, 
            showOnlyOpenCases:false, 
            showOwnCasesCheckBox:(CurrentPrincipal.IsInRole("report") || CurrentPrincipal.IsInRole("admin"))
        );        
        CurrentCulture = CultureInfo.CurrentCulture.Name;
        ShowReport(InputFilter);
    }

    protected void  ShowReport(CaseFilterModel filter)
    {
        SubmitedFilter = ObjHelper.Clone<CaseFilterModel>(filter);       

    }

    protected async Task ShowDetailedReportByStatus(int statusId)
    {
        var filterDetailedReport =  ObjHelper.Clone<CaseFilterModel>(SubmitedFilter);
        filterDetailedReport.ShowResult = true;
        filterDetailedReport.ShowStatus = true;
        filterDetailedReport.StatusId = statusId;
        await ProtectedSessionStore.SetAsync("FilterDetailedReport", filterDetailedReport);

        //await JSRuntime.InvokeAsync<object>("open", "/Reports/ReportDetailed", "_blank");
        NavManager.NavigateTo("/Reports/ReportDetailed");
    }
     
    protected async Task ShowDetailedReportByResult(int resultId)
    {
        var filterDetailedReport =  ObjHelper.Clone<CaseFilterModel>(SubmitedFilter);
        filterDetailedReport.ShowResult = true;
        filterDetailedReport.ShowStatus = true;
        filterDetailedReport.ResultId = resultId;
        await ProtectedSessionStore.SetAsync("FilterDetailedReport", filterDetailedReport);

        //await JSRuntime.InvokeAsync<object>("open", "/Reports/ReportDetailed", "_blank");
        NavManager.NavigateTo("/Reports/ReportDetailed");
    }

    protected async Task ShowDetailedReportByAlias()
    {
        var filterDetailedReport =  ObjHelper.Clone<CaseFilterModel>(SubmitedFilter);
        filterDetailedReport.ShowResult = true;
        filterDetailedReport.ShowStatus = true;
        filterDetailedReport.ResultId = null;
        filterDetailedReport.StatusId = null;
        await ProtectedSessionStore.SetAsync("FilterDetailedReport", filterDetailedReport);

        //await JSRuntime.InvokeAsync<object>("open", "/Reports/ReportDetailed/Alias", "_blank");
        NavManager.NavigateTo("/Reports/ReportDetailed/Alias");
    }
}
