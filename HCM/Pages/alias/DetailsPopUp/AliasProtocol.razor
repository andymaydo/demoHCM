@using Syncfusion.Blazor.Grids

<div class="mt-1">
    @if (_loadingStatus == 0)
    {
         <div class="text-center"><em>@AmLocalizer.GetText("Component_Status_Loading")</em></div>
    }

    @if (_loadingStatus == 1)
    {
        <SfGrid DataSource="@Protocol" AllowTextWrap="true">
            <GridTextWrapSettings WrapMode="WrapMode.Both"></GridTextWrapSettings>
            <GridTemplates>
                <DetailTemplate>
                    @{
                        var protocol = (context as AmAliasProtocol);
                        <table class="detailtable" width="100%">
                            <colgroup>
                                <col width="50%">
                                <col width="50%">
                            </colgroup>
                            <tbody>
                                <tr>
                                    <td>
                                        <span class="font-weight-bold">@AmLocalizer.GetText("AliasProtocol_Column_RequestedBy")</span>
                                    </td>
                                    <td>
                                        <span class="font-weight-bold">@AmLocalizer.GetText("AliasProtocol_Column_RequestReason")</span>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="vertical-align:top">
                                        @protocol.InUserLogin
                                    </td>
                                    <td style="vertical-align:top">
                                        @protocol.Description
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <span class="font-weight-bold">@AmLocalizer.GetText("AliasProtocol_Column_AuthorizedBy")</span>
                                    </td>
                                    <td>
                                        <span class="font-weight-bold">@AmLocalizer.GetText("AliasProtocol_Column_AuthNote")</span>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="vertical-align:top">
                                        @protocol.AuthUserLogin
                                    </td>
                                    <td style="vertical-align:top">
                                        @protocol.AuthNote
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    }
                </DetailTemplate>
            </GridTemplates>
            <GridColumns>
                <GridColumn Field=@nameof(AmAliasProtocol.Date) HeaderText="@AmLocalizer.GetText("AliasProtocol_Column_Date")" Type="ColumnType.DateTime" AutoFit="true"></GridColumn>
                <GridColumn Field=@nameof(AmAliasProtocol.ActionID) HeaderText="@AmLocalizer.GetText("AliasProtocol_Column_Action")">
                    <Template>
                        @{
                            var rep = (context as AmAliasProtocol);
                            <div>@AmLocalizer.GetText((@AmEnums.AliasProtocolActionDic[rep.ActionID]))</div>
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(AmAliasProtocol.StatusID) HeaderText="@AmLocalizer.GetText("AliasProtocol_Column_Status")">
                    <Template>
                        @{
                            var rep = (context as AmAliasProtocol);
                            <div>@AmLocalizer.GetText((@AmEnums.AliasProtocolStatusDic[rep.StatusID]))</div>
                        }
                    </Template>
                </GridColumn>
            </GridColumns>
        </SfGrid>
    }


    @if (_loadingStatus == 2)
    {
        <div class="text-center"><em>@AmLocalizer.GetText("Component_Status_LoadingFailed")</em></div>
    }

</div>

@code {

    [Inject] private IAliasManager AliasService { get; set; }
    [Inject] private IAliasManagerLocalizer AmLocalizer { get; set; }
    [Inject] private ILogger<AliasProtocol> _logger { get; set; }

    [CascadingParameter] public AmAlias Aliastem { get; set; }

    [Parameter] public string FilterBy { get; set; }
    [Parameter] public int SelectedProtocolId { get; set; }
    [Parameter] public EventCallback<int> SelectedProtocolIdChanged { get; set; }



    protected int _loadingStatus { get; set; } = 0;
    protected List<AmAliasProtocol> Protocol { get; set; }
   

    protected override async Task OnInitializedAsync()
    {

        await base.OnInitializedAsync();


        try
        {
            _loadingStatus = 0; //start loading

            if (FilterBy == "Waiting")
            {
                Protocol = await AliasService.ProtocolGetWaitingByAliasIdAsync(Aliastem.aliasID);
                await SelectedProtocolIdChanged.InvokeAsync(Protocol[0].ID);
            }
            else
            {
                Protocol = await AliasService.ProtocolGetByAliasIdAsync(Aliastem.aliasID);
            }

            _loadingStatus = 1; //loading finished
        }
        catch (Exception ex)
        {
            _loadingStatus = 2; //loading failed

            _logger.LogDebug(ex, ex.StackTrace);
            _logger.LogError(ex.Message);            
        }

    }
}
