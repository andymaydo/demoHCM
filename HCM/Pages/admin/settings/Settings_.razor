
@using Syncfusion.Blazor.Popups
@using HCMDataAccess;
@using HCMModels;

@inject IStringLocalizer<App> Localizer
@inject ISettingsData _settingsData;
@inject ILocalStorageService storageService

@attribute [Authorize]


<h3 class="title">@Localizer["Administration_Settings_Title"]</h3>

<div class="container">
    <div class="row row_padding blue_bg mt-3">
        <div class="col-md-12 form-inline control_padding">
            <h5 class="mt-1">@Localizer["SMTP_1"]</h5>

        </div>

    </div>
</div>




<div class="container">

    <EditForm EditContext="_SettingsEditContext"  OnValidSubmit="onSave_Click">

        <div class="row row_padding">
            <div class="col-md-5 form-inline control_padding">
                <label class="col-md-3 control_padding">@Localizer["SMTP_2"]</label>
                <div class="col-md-7 control_padding">
                    <SfTextBox Placeholder="@Localizer["SMTP_2"]" @bind-Value="@_SettingsModel.SMTPServer" ValueChange="SmtpServer_ValueChange">
                    </SfTextBox>
                </div>
            </div>
            <div class="col-md-2 profilWizadrdText"><ValidationMessage For="@(() => _SettingsModel.SMTPServer)" /> </div>
        </div>
        <div class="row row_padding">
            <div class="col-md-5 form-inline control_padding">
                <label class="col-md-3 control_padding">@Localizer["SMTP_3"]</label>
                <div class="col-md-3 control_padding">
                    <SfTextBox Placeholder="@Localizer["SMTP_3"]" @bind-Value="@_SettingsModel.SMTPServerPort" ValueChange="SmtpServerPort_ValueChange">
                    </SfTextBox>
                </div>
            </div>
            <div class="col-md-2 profilWizadrdText"><ValidationMessage For="@(() => _SettingsModel.SMTPServerPort)" /> </div>
        </div>
        <div class="row row_padding">
            <div class="col-md-5 form-inline control_padding">
                <label class="col-md-3 control_padding">&nbsp;</label>
                <div class="col-md-9 control_padding">
                    <SfCheckBox @bind-Checked="SmtpServerAuth" Label="@Localizer["SMTP_4"]" ValueChange="@SmtpServerAuth_OnChange" TChecked="bool"></SfCheckBox>
                </div>
            </div>
        </div>
        <div class="row row_padding">
            <div class="col-md-5 form-inline control_padding">
                <label class="col-md-3 control_padding">&nbsp;</label>
                <label class="col-md-3 control_padding">@Localizer["SMTP_5"]</label>
                <div class="col-md-6 control_padding">
                    <SfTextBox  Placeholder="@Localizer["SMTP_5"]" @bind-Value="@_SettingsModel.SMTPServerUser" ValueChange="SmtpServerAuthUser_ValueChange">
                    </SfTextBox>
                </div>
            </div>
            <div class="col-md-2 profilWizadrdText"><ValidationMessage For="@(() => _SettingsModel.SMTPServerUser)" /> </div>
        </div>
        <div class="row row_padding">
            <div class="col-md-5 form-inline control_padding">
                <label class="col-md-3 control_padding">&nbsp;</label>
                <label class="col-md-3 control_padding">@Localizer["SMTP_6"]</label>
                <div class="col-md-6 control_padding">
                    <SfTextBox  Placeholder="@Localizer["SMTP_6"]" @bind-Value="@_SettingsModel.SMTPServerPass" ValueChange="SmtpServerAuthPwd_ValueChange">
                    </SfTextBox>
                </div>
            </div>
            <div class="col-md-2 profilWizadrdText"><ValidationMessage For="@(() => _SettingsModel.SMTPServerPass)" /> </div>
        </div>

        <div class="row">
            <hr style="background-color: #ABC3D7;height:1px;width:100%" />
        </div>

        <div class="row">
            <div class="col-md-12">
                <SfButton CssClass="e-flat e-hcm-custom-btn col-md-2" IconCss="e-icons-hcm e-hcm-save" 
                          IsPrimary="true" Content="@Localizer["Button_Save"]" Type="submit" ></SfButton>
            </div>
        </div>

    </EditForm>

    <SfDialog Header="@ErrDialogHeader" Content="@ErrDialogContent" @ref="ErrDialogID" Width="335px" IsModal="true" @bind-Visible="ErrDialogVisibility">
        <DialogTemplates>

        </DialogTemplates>
        <DialogButtons>
            <DialogButton Content="OK" IsPrimary="true" OnClick="@DlgButtonClick" />
        </DialogButtons>
        @*<DialogEvents OnOpen="@DialogOpen" Closed="@DialogClose" OnOverlayClick="@OverlayClick"></DialogEvents>*@
        <DialogAnimationSettings Effect="@DialogEffect.None"></DialogAnimationSettings>
    </SfDialog>
</div>

@code {

    int smtpPort = 25;
    private bool SmtpServerAuth = true;

    private bool ErrDialogVisibility { get; set; } = false;
    SfDialog ErrDialogID;
    private string ErrDialogHeader { get; set; }
    private string ErrDialogContent { get; set; }

    SettingsModel _SettingsModel = new SettingsModel();
#nullable enable
    private ValidationMessageStore? messageStore;
#nullable disable
    private EditContext _SettingsEditContext;

    private void SmtpServer_ValueChange(Syncfusion.Blazor.Inputs.ChangedEventArgs args)
    {
        //SmtpServerValue = args.Value;
        _SettingsModel.SMTPServer = args.Value;
        HandleValidationRequested(null, null);
        StateHasChanged();
    }
    private void SmtpServerPort_ValueChange(Syncfusion.Blazor.Inputs.ChangedEventArgs args)
    {
        //SmtpServerPortValue = args.Value;
        _SettingsModel.SMTPServerPort = args.Value;
        HandleValidationRequested(null,null);
        StateHasChanged();
    }
    private void SmtpServerAuth_OnChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        SmtpServerAuth = args.Checked;
        HandleValidationRequested(null, null);
        StateHasChanged();
    }
    private void SmtpServerAuthUser_ValueChange(Syncfusion.Blazor.Inputs.ChangedEventArgs args)
    {
        //SmtpServerAuthUser = args.Value;
        _SettingsModel.SMTPServerUser = args.Value;
        HandleValidationRequested(null, null);
        StateHasChanged();
    }
    private void SmtpServerAuthPwd_ValueChange(Syncfusion.Blazor.Inputs.ChangedEventArgs args)
    {
        //SmtpServerAuthPwd = args.Value;
        _SettingsModel.SMTPServerPass = args.Value;
        HandleValidationRequested(null, null);
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        _SettingsEditContext = new(_SettingsModel);
        _SettingsEditContext.OnValidationRequested += HandleValidationRequested;
        messageStore = new(_SettingsEditContext);

        //List<SettingsModel> _Settings = await _settingsData.GetSettings();
        //if (_Settings != null && _Settings.Count > 0)
        //{
        //    _SettingsModel.SMTPServer = _Settings[0].SMTPServer;
        //    _SettingsModel.SMTPServerPort = _Settings[0].SMTPServerPort;
        //    SmtpServerAuth = _Settings[0].SMTPServerAuth;
        //    _SettingsModel.SMTPServerUser = _Settings[0].SMTPServerUser;
        //    _SettingsModel.SMTPServerPass = _Settings[0].SMTPServerPass;
        //}


    }

    private void HandleValidationRequested(object sender, ValidationRequestedEventArgs args)
    {
        messageStore?.Clear();

        if (string.IsNullOrEmpty(_SettingsModel?.SMTPServer))
        {
            messageStore?.Add(() => _SettingsModel.SMTPServer, Localizer["SMTP_9"]);
        }
        if (string.IsNullOrEmpty(_SettingsModel?.SMTPServerPort))
        {
            messageStore?.Add(() => _SettingsModel.SMTPServerPort, Localizer["SMTP_10"]);
        }
        int _SMTPServerPort = 0;
        if (!Int32.TryParse(_SettingsModel?.SMTPServerPort, out _SMTPServerPort))
        {
            messageStore?.Add(() => _SettingsModel.SMTPServerPort, Localizer["SMTP_10"]);
        }
        if (SmtpServerAuth)
        {
            if (string.IsNullOrEmpty(_SettingsModel?.SMTPServerUser ))
            {
                messageStore?.Add(() => _SettingsModel.SMTPServerUser, Localizer["SMTP_11"]);
            }
            if (string.IsNullOrEmpty(_SettingsModel?.SMTPServerPass))
            {
                messageStore?.Add(() => _SettingsModel.SMTPServerPass, Localizer["SMTP_12"]);
            }
        }

    }


    private void DlgButtonClick()
    {
        this.ErrDialogVisibility = false;
    }

    async Task onSave_Click()
    {

        //if (string.IsNullOrEmpty(SmtpServerValue))
        //{
        //    ErrDialogHeader = Localizer["MsgPanel_Error_Title"];
        //    ErrDialogContent = "<p>" + Localizer["SMTP_9"] + "</p>";
        //    this.ErrDialogVisibility = true;
        //    return;
        //}
        //if (string.IsNullOrEmpty(SmtpServerPortValue))
        //{
        //    ErrDialogHeader = Localizer["MsgPanel_Error_Title"];
        //    ErrDialogContent = "<p>" + Localizer["SMTP_10"] + "</p>";
        //    this.ErrDialogVisibility = true;
        //    return;
        //}
        //if (!Int32.TryParse(SmtpServerPortValue, out smtpPort))
        //{
        //    ErrDialogHeader = Localizer["MsgPanel_Error_Title"];
        //    ErrDialogContent = "<p>" + Localizer["SMTP_10"] + "</p>";
        //    this.ErrDialogVisibility = true;
        //    return;
        //}

        //if (SmtpServerAuth)
        //{
        //    if (string.IsNullOrEmpty(SmtpServerAuthUser))
        //    {
        //        ErrDialogHeader = Localizer["MsgPanel_Error_Title"];
        //        ErrDialogContent = "<p>" + Localizer["SMTP_11"] + "</p>";
        //        this.ErrDialogVisibility = true;
        //        return;
        //    }
        //    if (string.IsNullOrEmpty(SmtpServerAuthPwd))
        //    {
        //        ErrDialogHeader = Localizer["MsgPanel_Error_Title"];
        //        ErrDialogContent = "<p>" + Localizer["SMTP_12"] + "</p>";
        //        this.ErrDialogVisibility = true;
        //        return;
        //    }
        //}

        UsersModel _userInfo = await storageService.GetItemAsync<UsersModel>("User");
        //int resul = await _settingsData.ChangeSettings(_userInfo.UserID, _SettingsModel.SMTPServer, Convert.ToInt32(_SettingsModel.SMTPServerPort), SmtpServerAuth, _SettingsModel.SMTPServerUser, _SettingsModel.SMTPServerPass);

        //if (resul == 0)
        //{
        //    ErrDialogHeader = Localizer["MsgPanel_Success_Title"];
        //    ErrDialogContent = "<p>" + Localizer["SMTP_8"] + "</p>";
        //    this.ErrDialogVisibility = true;
        //}
        //else
        //{
        //    ErrDialogHeader = Localizer["MsgPanel_Error_Title"];
        //    ErrDialogContent = "<p>" + Localizer["MsgPanel_Error_Title"] + "</p>";
        //    this.ErrDialogVisibility = true;
        //}
    }
}
