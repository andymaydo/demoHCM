@using AutoMapper
@using HCMDataAccess
@using HCMModels

        
@if (_loadingStatus == 0)
{
    <p><em>Loading...</em></p>
}
@if (_loadingStatus == 1)
{
    <h5>@Localizer.Str["SMTP_1"]</h5>

    <EditForm Model="@FormModel" OnValidSubmit="@ValidFormSubmited" >
        <DataAnnotationsValidator />      
       
        <div class="mb-3">
            <label class="form-label">@Localizer.Str["SMTP_2"]</label>            
            <SfTextBox @bind-Value="@FormModel.SMTPServer"></SfTextBox>
            <ValidationMessage For="@(() => FormModel.SMTPServer)" />     
        </div>
        <div class="mb-3">
            <label class="form-label">@Localizer.Str["SMTP_3"]</label>
            <SfTextBox @bind-Value="@FormModel.SMTPServerPort"></SfTextBox>
            <ValidationMessage For="@(() => FormModel.SMTPServerPort)" />                                       
        </div>
       
        
        <div class="card card-secondary mb-3">
            <div class="card-header">
                <SfCheckBox 
                    @bind-Checked="FormModel.SMTPServerAuth" 
                    Label="@Localizer.Str["SMTP_4"]" 
                    TChecked="bool">
                </SfCheckBox>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <label class="col-form-label col-lg-3">@Localizer.Str["SMTP_5"]</label>
                    <div class = "col-lg-9">
                        <SfTextBox @bind-Value="@FormModel.SMTPServerUser"
                            Enabled="FormModel.SMTPServerAuth">
                        </SfTextBox>
                        <ValidationMessage For="@(() => FormModel.SMTPServerUser)" /> 
                    </div> 
                </div>
                <div class="row mb-3">
                    <label class="col-form-label col-lg-3">@Localizer.Str["SMTP_6"]</label>
                    <div class = "col-lg-9">
                        <SfTextBox @bind-Value="@FormModel.SMTPServerPass"
                            Type="Syncfusion.Blazor.Inputs.InputType.Password" 
                            Enabled="FormModel.SMTPServerAuth">
                        </SfTextBox>
                        <ValidationMessage For="@(() => FormModel.SMTPServerPass)" /> 
                    </div>  
                </div>                    
            </div>
        </div>

        <div class="row pt-2">                       
            <div class="col-12 text-right">
                <SfButton Type="submit" IsPrimary="true"  Content="@Localizer.Str["Button_Save"]" ></SfButton>                        
            </div>                       
        </div>
    </EditForm>
}

<UiMessageBox Data="Messages.List"/>


@code {
    [Inject] private ISettingsData SettingsService { get; set; }
    [Inject] private ILogger<SettingsSMTPPan> _logger { get; set; }
    [Inject] private CommonLocalizationService Localizer { get; set; }
    [Inject] private IMapper _mapper { get; set; }

    [CascadingParameter(Name = "CurrentContactId")] protected int CurrentContactId { get; set; }

    protected SettingsSMTPForm FormModel { get; set; }
    protected UiMessages Messages { get; set; }
    
    private int _loadingStatus;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        try
        {
            _loadingStatus = 0;

            Messages = new UiMessages();
            await InitSMTPForm();

            _loadingStatus = 1;
        }
        catch (Exception ex)
        {                        
            _logger.LogError(ex.Message);
            _logger.LogDebug(ex, ex.Message);
            Messages.AddError(@Localizer.Str["MsgPanel_Error_Title"],ex.Message, showDetail: true);

            _loadingStatus = 2;
        }

    }

    protected async Task InitSMTPForm()
    {
        var smtpSettings = await SettingsService.GetSettings();
        FormModel = _mapper.Map<SettingsSMTPForm>(smtpSettings);
    }

    protected async Task ValidFormSubmited()
    {
        try
        {
            Messages.List.Clear();

            await SettingsService.ChangeSettings(
                CurrentContactId, FormModel.SMTPServer, FormModel.SMTPServerPort, 
                FormModel.SMTPServerAuth, FormModel.SMTPServerUser, FormModel.SMTPServerPass);

            Messages.AddInfo(@Localizer.Str["SMTP_8"]);

        }
        catch (Exception ex)
        {                        
            _logger.LogError(ex.Message);
            _logger.LogDebug(ex, ex.Message);
            Messages.AddError(@Localizer.Str["MsgPanel_Error_Title"],ex.Message);

        }

    }  
}
