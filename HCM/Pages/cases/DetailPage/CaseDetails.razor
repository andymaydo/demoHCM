@page "/Cases/CaseDetails"
@using HCMApi
@using HCMApi.Models
@using HCM.Pages.cases.DetailPage.HistoryPan
@using HCM.Pages.cases.DetailPage.Shared
@using AutoMapper



<div class="container-fluid">
    <h3>@Localizer.Str["Cases_Detail_Title"]</h3>
    
    @if (_loadingStatus == 0)
    {
        <p><em>Loading...</em></p>
    }

    @if (_loadingStatus == 1)
    {
        
        <div class="row">
            <div class="col-md-3">
                <div class="py-3">
                    <CaseActionPan CaseModel="@MyCase" ProfileModel="@ProfileModel" 
                        OnNoteAction="ReloadCaseHistory" 
                        OnChangeStatusAction="ReloadCase"
                        OnAddUserAction="ReloadCase"
                        OnAddAliasAction="ReloadCaseHistory">                        
                    </CaseActionPan>
                </div>
            </div>
            <div class="col-md-6">
                <div class="py-3">
                    <CaseSubjPan CaseSubject="@MyCase.Subject"></CaseSubjPan>
                </div>
                <div class="py-3">
                    <CaseMatchPan CaseCustomerName="@MyCase.CustomerName"></CaseMatchPan>
                 </div>
                 <div class="py-3">
                    <CaseHistoryPan Source="@CaseEvents"></CaseHistoryPan>
                 </div>
            </div>
            <div class="col-md-3">
                <div class="py-3">
                    <CaseOverviewPan Source="@MyCase"></CaseOverviewPan>
                </div>
                <div class="py-3">
                    <CaseContactPan Source="@ProfileParticipants" ShowStriped="true" ShowFunction="true" ShowRole="true" Title="@Localizer.Str["Cases_Detail_Label_ProfileUsers"]"></CaseContactPan>
                </div>
                <div class="py-3">
                    <CaseContactPan Source="@EscalationParticipants" ShowFunction="true" ShowRole="true" Title="@Localizer.Str["Cases_Detail_Label_EscalationUsers"]"></CaseContactPan>
                </div>
                <div class="py-3">
                    <CaseContactPan Source="@CaseParticipants" ShowFunction="true" ShowRole="true" Title=@Localizer.Str["Cases_Detail_Label_Users"]></CaseContactPan>
                </div>
            </div>
        </div>
       
    }
   

    <div class="py-3">
        <UiMessageBox Data="Messages.List" />
    </div>

</div>

@code {
    [Inject] private ILogger<CaseDetails> _logger { get; set; }
    [Inject] private CommonLocalizationService Localizer { get; set; }
    [Inject] private ProtectedSessionStorage  ProtectedSessionStorage { get; set; }
    [Inject] private ICMSAPI CmsService { get; set; }
    [Inject] private ICMSProfile ProileService { get; set; }
    [Inject] private IMapper _mapper { get; set; }


    protected int CaseId { get; set; }
    protected Case MyCase { get; set; }
    protected CMSProfileModel ProfileModel { get; set; } = new CMSProfileModel();
    protected List<CaseContactSelectable> CaseParticipants { get; set; } 
    protected List<CaseContactSelectable> ProfileParticipants { get; set; }
    protected List<CaseContactSelectable> EscalationParticipants { get; set; }
    protected List<CaseEvent> CaseEvents { get; set; } = new List<CaseEvent>();


    protected UiMessages Messages { get; set; }
    private int _loadingStatus;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        Messages = new UiMessages();

        var caseId = await ProtectedSessionStorage.GetAsync<int>("CaseId");
        CaseId = caseId.Success ? caseId.Value : -1;

        _loadingStatus = 0;
        try
        {
            await LoadCaseData();
            _loadingStatus = 1;
        }
        catch (Exception ex)
        {                        
            _logger.LogError(ex.Message);
            _logger.LogDebug(ex, ex.Message);
            Messages.AddError(@Localizer.Str["MsgPanel_Error_Title"],ex.Message, showDetail: true);

            _loadingStatus = 2;
        }
    }


    protected async Task LoadCaseData()
    {

        MyCase = await CmsService.LoadCase(CaseId);
        if(MyCase == null){ throw new Exception($"Case Not Found ({CaseId.ToString()})"); }

        CaseParticipants = _mapper.Map<List<CaseContactSelectable>>(MyCase.ParticipantsAsList);
        CaseEvents = await CmsService.GetEventList(CaseId);

        ProfileModel = ProileService.Load(MyCase.ProfileID);
        ProfileParticipants = _mapper.Map<List<CaseContactSelectable>>(ProfileModel.profileParticipants);
        EscalationParticipants = _mapper.Map<List<CaseContactSelectable>>(ProfileModel.escalationUsers);

    }


    protected async Task ReloadCase()
    {
        try
        {
            Messages.List.Clear();
            MyCase = await CmsService.LoadCase(CaseId);
            CaseParticipants = _mapper.Map<List<CaseContactSelectable>>(MyCase.ParticipantsAsList);
            CaseEvents = await CmsService.GetEventList(CaseId);
        }
        catch (Exception ex)
        {                        
            _logger.LogError(ex.Message);
            _logger.LogDebug(ex, ex.Message);
            Messages.AddError(@Localizer.Str["MsgPanel_Error_Title"],ex.Message, showDetail: true);
        }
    }

    protected async Task ReloadCaseHistory()
    {
        try
        {
            Messages.List.Clear();                        
            CaseEvents = await CmsService.GetEventList(CaseId);
        }
        catch (Exception ex)
        {                        
            _logger.LogError(ex.Message);
            _logger.LogDebug(ex, ex.Message);
            Messages.AddError(@Localizer.Str["MsgPanel_Error_Title"],ex.Message, showDetail: true);
        }
    }
}
