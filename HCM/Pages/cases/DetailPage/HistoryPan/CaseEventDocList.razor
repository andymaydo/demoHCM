@using HCMApi
@using BlazorDownloadFile;
@using System.IO
@using HCM.Options
@using System.Xml

@if(DocList?.Count > 0)
{
    <h5 class="tLabel2">@Localizer.Str["Cases_Detail_Label_AttachInformation"]</h5>
    <div class="top_blue_bg"></div>
               
     <table class="table table-striped table-borderless table-sm">              
        <tbody class="itemDetail">

            @foreach (CaseDoc cd in DocList)
            {
                <tr>                  
                    <td>
                        <a href="" @onclick="@(() => StartDownload(cd.CaseID,cd.FilePath,cd.DocName))" @onclick:preventDefault class="btnUpdate">@cd.OrgFileName</a>
                    </td>  
                    <td align="right">
                         @(cd.DocSize / 1024) Kb
                    </td>                                        
                </tr>
            }
                <tr>                  
                    <td>@Localizer.Str["Cases_AddMessage_AddReport"]</td>  
                    <td align="right">@MatchReportAdded</td>                                        
                </tr>

            </tbody>
    </table>
   
    
}
    
        

@code {

    [Inject] private CommonLocalizationService Localizer { get; set; }
    [Inject] private ICaseDoc CaseDocService { get; set; }
    [Inject] private CMSSettings cmsSettingsService { get; set; }
    [Inject] private IBlazorDownloadFileService blazorDownloadFileService { get; set; }


    [Parameter] public string XmlDocList { get; set; }


    protected List<CaseDoc> DocList { get; set; } = new List<CaseDoc>();
    protected string MatchReportAdded;
    private string _xmlDocList;



    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if(!String.IsNullOrEmpty(XmlDocList))
        {
            // Docs Uploaded?
            if(XmlDocList.IndexOf("<CaseDocList>") == 0)
            {
                try
                {
                    DocList = CaseDocService.LoadFromXml(XmlDocList);
                }
                catch { };
            }

            //MatchReport attached?
            var xDoc = new XmlDocument();
            XmlNode addedReport;
            try
            {
                xDoc.LoadXml(XmlDocList);
                addedReport = xDoc.SelectSingleNode("/CaseDocList/AddReport");

                MatchReportAdded = (addedReport != null) ? @Localizer.Str["Status_Yes"] : @Localizer.Str["Status_NO"];
            }
            catch(XmlException ex)
            {
                MatchReportAdded = @Localizer.Str["Status_NO"];
            }
        }

    }


    public async Task StartDownload(int CaseID, string FilePath, string DocName)
    {
        var memory = new MemoryStream();
        string fullPath = cmsSettingsService.CmsDocPath + FilePath;

        if (File.Exists(fullPath))
        {
            await using (var stream = new FileStream(fullPath, FileMode.Open))
            {
                await stream.CopyToAsync(memory);
            }
            memory.Position = 0;

            await blazorDownloadFileService.DownloadFile(DocName, memory, "application/octet-stream");
        }


    }                            
}
